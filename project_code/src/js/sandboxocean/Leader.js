// Generated by CoffeeScript 1.6.2
(function() {
  var Leader,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Leader = (function() {
    function Leader(parent) {
      this.parent = parent;
      this.isSafe = __bind(this.isSafe, this);
      this.findSafeLocation = __bind(this.findSafeLocation, this);
      this.startInterval = __bind(this.startInterval, this);
      this.interval = __bind(this.interval, this);
      this.startX = this.parent.view.x;
      this.startY = this.parent.view.y;
      this.delayDefault = 1000;
      this.location = new Point(this.startX, this.startY);
      this.nextLocation = new Point(this.startX, this.startY);
      this.delay = 100;
      this["try"] = 0;
      this.startInterval();
    }

    Leader.prototype.interval = function() {
      this.findSafeLocation();
      this.location.x = this.nextLocation.x;
      this.location.y = this.nextLocation.y;
      return this.startInterval();
    };

    Leader.prototype.startInterval = function() {
      this.delay = Math.random() * 3000 + 1500;
      return setTimeout(this.interval, this.delay);
    };

    Leader.prototype.findSafeLocation = function() {
      this.nextLocation.x = this.parent.view.x + Math.random() * 200 - 100;
      this.nextLocation.y = this.parent.view.y + Math.random() * 200 - 100;
      if (this.isSafe(this.nextLocation.x, this.nextLocation.y) || this["try"] > 10) {
        this["try"] = 0;
        return this.nextLocation;
      } else {
        this["try"]++;
        return this.findSafeLocation();
      }
    };

    Leader.prototype.isSafe = function(x, y) {
      var result;

      result = window.depth.getDepthLevelToDOA(x, y, this.parent.config);
      if (result === "between") {
        return true;
      } else {
        return false;
      }
    };

    return Leader;

  })();

  window.Leader = Leader;

}).call(this);

/*
//@ sourceMappingURL=Leader.map
*/
