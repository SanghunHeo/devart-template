// Generated by CoffeeScript 1.6.2
(function() {
  var creatureMaker,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  creatureMaker = (function() {
    function creatureMaker() {
      this.getCreatureListOnLocation = __bind(this.getCreatureListOnLocation, this);
      this.make = __bind(this.make, this);
    }

    creatureMaker.prototype.make = function(x, y) {
      var i, item, list, name, num, _i, _len, _ref, _ref1, _ref2;

      this.x = x;
      this.y = y;
      list = [];
      _ref = window.creatureConfig;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        item = _ref[i];
        if (window.depth.getDepthLevelToDOA(x, y, item.data) === "between") {
          list.push(item.data);
        }
      }
      num = parseInt(list.length * Math.random());
      name = list != null ? (_ref1 = list[num]) != null ? (_ref2 = _ref1.view) != null ? _ref2.name : void 0 : void 0 : void 0;
      if (name != null) {
        return new Creature(name, x, y).birth();
      }
    };

    creatureMaker.prototype.getCreatureListOnLocation = function(location) {
      this.location = location;
    };

    creatureMaker.prototype.clone = function(obj) {
      var flags, key, newInstance;

      if ((obj == null) || typeof obj !== 'object') {
        return obj;
      }
      if (obj instanceof Date) {
        return new Date(obj.getTime());
      }
      if (obj instanceof RegExp) {
        flags = '';
        if (obj.global != null) {
          flags += 'g';
        }
        if (obj.ignoreCase != null) {
          flags += 'i';
        }
        if (obj.multiline != null) {
          flags += 'm';
        }
        if (obj.sticky != null) {
          flags += 'y';
        }
        return new RegExp(obj.source, flags);
      }
      newInstance = new obj.constructor();
      for (key in obj) {
        newInstance[key] = clone(obj[key]);
      }
      return newInstance;
    };

    return creatureMaker;

  })();

  window.creatureMaker = creatureMaker;

}).call(this);

/*
//@ sourceMappingURL=creatureMaker.map
*/
